name: Build Electron App

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-12, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache node_modules
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ matrix.os }}-dependencies-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ matrix.os }}-dependencies-

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build Electron app
        run: npm run build

      - name: Package Electron app
        run: |
          if [[ ${matrix.os} == 'ubuntu-latest' ]]; then
            npx electron-builder --linux
          elif [[ ${matrix.os} == 'macos-12' ]]; then
            npx electron-builder --mac
          elif [[ ${matrix.os} == 'windows-latest' ]]; then
            npx electron-builder --windows
          fi
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          ARTIFACT_NAME: ${matrix.os}-build

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: dist/*
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
