name: Build Electron App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache node_modules
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-dependencies-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-dependencies-

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build Electron app
        run: npm run build

      - name: Package Electron app for Windows
        if: runner.os == 'Windows'
        run: npx electron-builder --windows
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          ARTIFACT_NAME: windows-build
      - name: Package Electron app for macOS
        if: runner.os == 'macOS'
        run: npx electron-builder --mac
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          ARTIFACT_NAME: mac-build
      - name: Package Electron app for Linux
        if: runner.os == 'Linux'
        run: npx electron-builder --linux
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          ARTIFACT_NAME: linux-build
      - name: Upload artifacts
        if: runner.os == 'Windows' || runner.os == 'macOS' || runner.os == 'Linux'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: dist/*
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
